on:
  pull_request:
    types: 
      - opened
      - reopened
      - synchronize
      - labeled
      - unlabeled
    paths:
      - '**'
  push:
    branches:
      - '*'
    
env:
  INPUT_NAME: "chrisman"
  BS_LOCAL_IDENTIFIER: "bs-id-${{ github.event.number }}"
  PR_NUMBER: ${{ github.event.pull_request.number }}
  BS_PROJECT_NAME: "flutter_app_playground-Patrol-2.2.5"
  BS_LOCAL_TESTING: "false"
  # GH_EVENT_OBJECT: ${{ github.event. }}
  
jobs:
  run_browserstack_tests:
    name: Run Browserstack Tests
    runs-on: ubuntu-latest
    steps:
      - name: Outputs
        run: |
          echo "The BS_LOCAL_IDENTIFIER is ${{ env.BS_LOCAL_IDENTIFIER }}"
          echo "The PR_NUMBER is ${{ env.PR_NUMBER }}"

      # - name: Create comment
      #   uses: peter-evans/create-or-update-comment@v4
      #   with:
      #     # token: ${{ secrets.GITHUB_TOKEN }}
      #     issue-number: ${{ github.event.pull_request.number }}
      #     body: |
      #       Kicking off Browserstack test, check back here for results...
      #     reactions: 'rocket'
  
      - name: Check out the repo
        uses: actions/checkout@v2
      # - name: update local.properties
      #   run: |
      #     MY_STRING="sdk.dir=/Android/sdk\n
      #       flutter.sdk=/flutter\n
      #       flutter.buildMode=debug\n
      #       flutter.versionName=1.0.0\n
      #       flutter.targetSdkVersion=31\n
      #       flutter.compileSdkVersion=33\n"
      #     echo "$MY_STRING"> $GITHUB_WORKSPACE/workspace//android/local.properties

      # - name: write gradle.properties file
      #   run: |
      #     MY_STRING="ujetAwsAccessKeyValue= \n
      #       ujetAwsSecretKeyValue= \n"
      #     echo "$MY_STRING" > $GITHUB_WORKSPACE/workspace/android/gradle.properties

      # - name: Show file content
      #   run: |
      #     pwd
      #     ls -la
      #     cat $GITHUB_WORKSPACE/workspace/android/local.properties
      #     cat $GITHUB_WORKSPACE/workspace/android/gradle.properties

      - name: List Root/workspace Dir
        run: |
          cd workspace && ls

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Pull Base Image
        run: |
          docker pull cfrey222/exploratory-things:parent

      - name: Run the build process with Docker
        id: docker_run 
        uses: addnab/docker-run-action@v3
        # uses: ./.github/actions/run-docker-image
        with:
          # username: ${{ secrets.DOCKERHUB_USERNAME }}
          # password: ${{ secrets.DOCKERHUB_TOKEN }}
          image: cfrey222/exploratory-things:parent
          options: -v ${{ github.workspace }}:/app
          run: |
            flutter pub get
            cd app/workspace && ls
            flutter --version
            patrol --version
            sdkmanager --list_installed
            echo " "
            cd script && ls
            cd ..
            flutter build apk --debug 
            echo "Build Complete"
            cd /
            echo " "
            echo "Running Patrol Build"
            app/workspace/script/browserstack-test-gh.sh build_apps ${{ secrets.BROWSERSTACK_USERNAME }} ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          # app/workspace/script/browserstack-test-gh.sh build_apps ${{ secrets.BROWSERSTACK_USERNAME }} ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
          
      #     # run: |
      #     #   flutter pub get
      #     #   cd app/workspace && ls
      #     #   flutter --version
      #     #   patrol --version
      #     #   sdkmanager --list_installed
      #     #   flutter build apk --debug
      #     #   echo "Build Complete"
      #     #   ls
      #     #   echo "..."
      #     #   echo "..."
      #     #   echo "CD build/app/outputs"
      #     #   cd build/app/outputs/apk && ls
      #     #   cd / && app/workspace/test-script.sh
      #     #   echo "Script Complete"
      #     # run: |
      #     #   echo "Running Script"
      #     #   cd app && ls
      #     #   workspace/test-script.sh
      #     #   echo "Script Complete"
      #     #   ls

      - name: List Root Dir
        run: |
          echo "GH Root Listing"
          cd workspace && ls

      - name: List Build Dir
        run: |
          echo "GH workspace/build/app/outputs/apk/androidTest/debug Listing"
          cd workspace/build/app/outputs/apk/androidTest/debug && ls

      - name: Upload Application Under Test
        id: upload_aut
        run: |
          workspace/script/browserstack-test-gh.sh upload_aut_app ${{ secrets.BROWSERSTACK_USERNAME }} ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
  
      - name: Upload Test Suite App
        id: upload_test_suite
        run: |
          workspace/script/browserstack-test-gh.sh upload_test_app ${{ secrets.BROWSERSTACK_USERNAME }} ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
  
      - name: Run Browserstack Test Suite
        id: run_browserstack_tests
        run: |
          workspace/script/browserstack-test-gh.sh execute_test_run ${{ secrets.BROWSERSTACK_USERNAME }} ${{ secrets.BROWSERSTACK_ACCESS_KEY }} ${{ steps.upload_aut.outputs.BS_APP_URL }} ${{ steps.upload_test_suite.outputs.BS_TEST_SUITE_URL }} ${{ env.BS_PROJECT_NAME }} ${{ env.BS_LOCAL_TESTING}}

      - name: Check Build Status
        id: browserstack_build_status
        run: |
          workspace/script/browserstack-test-gh.sh check_build_status ${{ secrets.BROWSERSTACK_USERNAME }} ${{ secrets.BROWSERSTACK_ACCESS_KEY }} ${{ steps.run_browserstack_tests.outputs.BROWSERSTACK_BUILD_ID }}
        # timeout: 60000
        # interval: 4000

      - name: List the build status
        run: |
          echo "The build status is ==> ${{ steps.run_browserstack_tests.outputs.BROWSERSTACK_BUILD_ID }}"
          echo "The build id is ==> ${{ steps.browserstack_build_status.outputs.BUILD_ID }}"
          echo "The build DEVICE_SESSION_DEVICE_NAME is ==> ${{ steps.browserstack_build_status.outputs.DEVICE_SESSION_DEVICE_NAME }}"
          echo "The build DEVICE_SESSION_STATUS is ==> ${{ steps.browserstack_build_status.outputs.DEVICE_SESSION_STATUS }}"
          echo "The build DEVICE_SESSION_ID is ==> ${{ steps.browserstack_build_status.outputs.DEVICE_SESSION_ID }}"

      - name: Generate Test Report
        run: |
          echo "Generating Test Report"
          workspace/script/browserstack-test-gh.sh generate_test_run_report ${{ secrets.BROWSERSTACK_USERNAME }} ${{ secrets.BROWSERSTACK_ACCESS_KEY }} ${{ steps.run_browserstack_tests.outputs.BROWSERSTACK_BUILD_ID }} ${{ steps.browserstack_build_status.outputs.DEVICE_SESSION_ID }}

      - name: List test report contents
        run: |
          cd workspace/integration_test/reports & ls

      - name: Test Summary
        uses: test-summary/action@v2
        with:
          paths: "workspace/integration_test/reports/**/session_test_report-*.xml"
          output: test-summary.md
        if: always()

      - name: Upload test summary
        uses: actions/upload-artifact@v3
        with:
          name: test-summary
          path: test-summary.md
        if: always()

      # - name: Create comment
      #   uses: peter-evans/create-or-update-comment@v4
      #   with:
      #     issue-number: 1
      #     body: |
      #       This is a multi-line test comment
      #       - With GitHub **Markdown** :sparkles:
      #       - Created by [create-or-update-comment][1]

      #       [1]: https://github.com/peter-evans/create-or-update-comment
      #     reactions: '+1'

      - name: Post to a Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.25.0
        with:
          # Slack channel id, channel name, or user id to post message.
          # See also: https://api.slack.com/methods/chat.postMessage#channels
          # You can pass in multiple channels to post to by providing a comma-delimited list of channel IDs.
          channel-id: 'C06F5R3RGRK'
          # For posting a simple plain text message
          slack-message: "GitHub build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}