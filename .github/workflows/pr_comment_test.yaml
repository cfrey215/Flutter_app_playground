name: PR Comment Trigger

on:
  # # Trigger the workflow on new issues
  # issues:
  #   types: [opened]
  # # Trigger the workflow on new pull requests
  # pull_request:
  #   types: [opened]
  # Trigger the workflow on new issue comments    
  issue_comment:
    types: [created]

# Allows the workflow to create comments on issues and pull requests
permissions:
  issues: write
  pull-requests: write
  contents: read

jobs:
  # # This job only runs for issues
  # issue:
  #   name: Issue opened
  #   if: ${{ github.event_name == 'issues' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
      
  # This job only runs for issue comments
  # issue_comment_not_pr:
  #   name: Issue comment
  #   if: ${{ github.event_name == 'issue_comment' && !github.event.issue.pull_request }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: |
  #         echo 'Comment ID => ${{ github.event.comment.id }}'
  #         echo "Issue received ==> ${{ github.event.comment.body }}"

  issue_comment:
    name: Issue comment PR
    if: ${{ github.event_name == 'issue_comment' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        id: get_issue_number
        with:
          script: |
            if (context.issue.number) {
              // Return issue number if present
              return context.issue.number;
            } else {
              // Otherwise return issue number from commit
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0].number;
            }
          result-encoding: string

      - name: Issue number
        run: |
          echo '${{steps.get_issue_number.outputs.result}}'
          echo "PR_NUMBER=${{steps.get_issue_number.outputs.result}}" >> "$GITHUB_OUTPUT"
          
      - name: Get branch names.
        id: branch-names
        uses: tj-actions/branch-names@v8

      - name: Running on the default branch.
        if: steps.branch-names.outputs.is_default == 'true'
        run: |
          echo "Running on default: ${{ steps.branch-names.outputs.current_branch }}" 
          echo "BRANCH_NAME=${{ steps.branch-names.outputs.current_branch }}" >> "$GITHUB_OUTPUT"
        # Outputs: "Running on default: main"
      
      - name: Running on a pull request branch.
        if: steps.branch-names.outputs.is_default == 'false'
        run: |
          echo "Running on pr: ${{ steps.branch-names.outputs.current_branch }}"
          echo "BRANCH_NAME=${{ steps.branch-names.outputs.current_branch }}" >> "$GITHUB_OUTPUT"
        # Outputs: "Running on pr: feature/test"
      
      - name: Running on a pull request branch.
        if: steps.branch-names.outputs.is_default == 'false'
        run: |
          echo "Base branch: ${{ steps.branch-names.outputs.base_ref_branch }}"
          echo "BRANCH_NAME=${{ steps.branch-names.outputs.base_ref_branch }}" >> "$GITHUB_OUTPUT"
        # Outputs: "Base branch: main"
        
      - name: Running on any event.
        run: |
          echo "Default branch: ${{ steps.branch-names.outputs.default_branch }}"
          echo "BRANCH_NAME=${{ steps.branch-names.outputs.default_branch }}" >> "$GITHUB_OUTPUT"

      - name: Outputs
        run: |  
          echo "The PR_NUMBER is ${{ env.PR_NUMBER }}"
          echo "BRANCH_NAME ==> ${{ env.BRANCH_NAME }}"
          echo "PR_URL=https://github.com/gopuff/gopuff_godrive_v2/pull/${{ env.PR_NUMBER }}"
          echo "COMMENT_ID=${{ github.event.comment.id }}" >> "$GITHUB_OUTPUT"
          echo "GH_EVENT_OBJECT Number ==> ${{ env.GH_EVENT_OBJECT }}"
          echo 'Comment ID => ${{ github.event.comment.id }}'
          echo "Issue received ==> ${{ github.event.comment.body }}"
          echo "PR_URL ==> ${{ env.PR_URL }}"

      - name: Update comment:running
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ env.COMMENT_ID }}
          body: |
            ...Building the app and preparing to run BrowserStack test suite, check back here for results...
          edit-mode: append
          reactions: 'rocket'
