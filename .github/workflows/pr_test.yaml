name: PR Comment Trigger

on:
  # Trigger the workflow on new issues
  # issues:
  #   types: [opened]
  # # Trigger the workflow on new pull requests
  # pull_request:
  #   types: [opened]
  push:
    branches:
      - '*'

# Allows the workflow to create comments on issues and pull requests
permissions:
  issues: write
  pull-requests: write

jobs:
  # # This job only runs for issues
  # issue:
  #   name: Issue opened
  #   if: ${{ github.event_name == 'issues' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
      
  # This job only runs for issue comments
  issue_comment:
    name: Issue comment
    if: ${{ github.event_name == 'issue_comment' && !github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "Issue received ==> ${{ github.event.comment.body }}"

  # This job only runs for pull requests  
  # pull_request:
  #   name: PR opened
  #   if: ${{ github.event_name == 'pull_request' }}
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: |
  #         echo "PR Opened... => ${{ github.event.comment.body }}"

  # This job only runs for pull request comments  
  pull_request_comment:
    name: PR comment
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo 'Comment ID => ${{ github.event.comment.id }}'
          echo "PR Comment received => ${{ github.event.comment.body }}"

      - uses: actions/github-script@v7
        id: get_pr_data1
        with:
          script: |
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data[0];

      - name: PR_NUmber
        run: | 
          echo 'PR Number => ${{ env.PR_NUMBER }}'

      - name: PR data
        run: |
          echo 'Data => ${{ github.event.pull_request.number }}'

      - name: comment id
        run: |
          echo 'Comment ID => ${{ github.event.comment.id }}'

      # - name: Pull Request data
      #   id: pr_data
      #   run: |
      #     echo 'issue-number => ${{ fromJson(steps.get_pr_data1.outputs.result).number }}'
      #     echo 'BRANCH_NAME => ${{ fromJson(steps.get_pr_data1.outputs.result).title }}'
      #     echo '${{ fromJson(steps.get_pr_data1.outputs.result).pull_request.head.url }}'
      #     echo "BRANCH_NAME=${{ fromJson(steps.get_pr_dat1a.outputs.result).title }}" >> "$GITHUB_OUTPUT"
      #     echo "PR_URL=https://github.com/cfrey215/Flutter_app_playground/pull/${{ fromJson(steps.get_pr_data1.outputs.result).number }}" >> "$GITHUB_OUTPUT"
